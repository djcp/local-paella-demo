#!/bin/bash

action="$1"

recreate_nginx_config() {
  echo "# DO NOT EDIT THIS FILE DIRECTLY.
# Edit './bin/nginx.conf.template' and then re-rerun './bin/start_nginx.sh' to
# regenerate the configuration correctly.

" > ./nginx.conf

  escaped_pwd=$(echo $PWD | sed "s/\\//\\\\\//g")
  cat ./bin/nginx.conf.template | sed "s/PWD/$escaped_pwd/g" | sed "s/USER/$USER/g" >> ./nginx.conf
}

recreate_nginx_config

unprivileged_pwd="$PWD"

case $action in
  start*)
    sudo /usr/local/bin/nginx -c "$unprivileged_pwd"/nginx.conf
    ;;
  stop*)
    sudo /usr/local/bin/nginx -s stop -c "$unprivileged_pwd"/nginx.conf
    ;;
  configtest*)
    sudo /usr/local/bin/nginx -t -c "$unprivileged_pwd"/nginx.conf
    ;;
  status*)
    if ps -p $(cat /tmp/mock_matterhorn_nginx.pid) &> /dev/null ; then
      echo 'running';
    else
      echo 'not running';
    fi
    ;;
  restart*)
    if ps -p $(cat /tmp/mock_matterhorn_nginx.pid) > /dev/null ; then
      sudo /usr/local/bin/nginx -s stop -c "$unprivileged_pwd"/nginx.conf
    fi
    sudo /usr/local/bin/nginx -c "$unprivileged_pwd"/nginx.conf
    ;;
  *)
    echo '
Usage: nginx <command>, where <command> can be:

* start
* stop
* configtest
* status
* restart
'
    ;;
esac
